# Maintainer: Norbert Pfeiler <norbert.pfeiler@gmail.com>

_realname=pythonqt-qt5-optpy27
pkgname="$MINGW_PACKAGE_PREFIX-$_realname"-static
pkgver=3.2+114.gbba1745
pkgrel=1
arch=('any')
pkgdesc="PythonQt fork featuring Qt 5.x and Python 3.x support and improved CMake build system (static Qt5 + Python2 version)"
license=('LGPL')
url="https://github.com/knossos-project/PythonQt"
makedepends=("$MINGW_PACKAGE_PREFIX-cmake"
  "$MINGW_PACKAGE_PREFIX-gcc"
  "$MINGW_PACKAGE_PREFIX-ninja"
  "git")
depends=("$MINGW_PACKAGE_PREFIX-qt5-static" #=$_qtver
  #"$MINGW_PACKAGE_PREFIX-python2"
  )
conflicts=("$MINGW_PACKAGE_PREFIX-qt5-python27-static")
provides=("$MINGW_PACKAGE_PREFIX-qt5-python27-static")
source=(git+https://github.com/knossos-project/PythonQt.git#branch=optpy27)
md5sums=('SKIP')

pkgver() {
  cd "PythonQt"
  git describe --always --dirty --tags | sed 's/^v//;s/-/+/;s/-/./g'
}

build() {
  mkdir -p "$srcdir/build-$MINGW_CHOST-$_realname"
  cd "$srcdir/build-$MINGW_CHOST-$_realname"

  #link to the system python installation 
  if [[ $CARCH == x86_64 ]]; then
    echo x64
    export PYTHON_PREFIX="/c/Windows/System32"
  elif [[ $CARCH == i686 ]]; then
    echo x32
    export PYTHON_PREFIX="/c/Windows/SysWOW64"
  fi

  gendef /C//Windows/System32/python27.dll
  grep -v ' DATA' python27.def > python27.nodata.def
  dlltool --input-def python27.nodata.def --output-delaylib libpython27.dl.a

  cmake -G Ninja \
    -DCMAKE_PREFIX_PATH:STRING="$MINGW_PREFIX/qt5-static:$PYTHON_PREFIX" \
    -DCMAKE_BUILD_TYPE=RELEASE \
    -DBUILD_SHARED_LIBS=FALSE \
    -DCMAKE_INSTALL_PREFIX="$pkgdir$MINGW_PREFIX/qt5-static" \
    -DPythonQt_Qt5=TRUE \
    -DPythonQt_Python3=FALSE \
    ../PythonQt
    #-DPYTHON_LIBRARY=libpython27.dl.a \
  cmake --build .
}

check() {
  cmake --build "$srcdir/build-$MINGW_CHOST-$_realname" --target tests
}

package() {
  cmake --install "$srcdir/build-$MINGW_CHOST-$_realname"
  #mkdir -p "$pkgdir/$MINGW_PREFIX/lib"
  #cp -v "$srcdir/build-$MINGW_CHOST-$_realname/libpython27.dl.a" "$pkgdir/$MINGW_PREFIX/lib/"
}
